//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BHXH.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BHXHEntities : DbContext
    {
        public BHXHEntities()
            : base("name=BHXHEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<HrChiTietDaoTao> HrChiTietDaoTao { get; set; }
        public virtual DbSet<HrHSLTangThem> HrHSLTangThem { get; set; }
        public virtual DbSet<HrKhenThuongKyLuat> HrKhenThuongKyLuat { get; set; }
        public virtual DbSet<HrLuongToiThieu> HrLuongToiThieu { get; set; }
        public virtual DbSet<HrNgayCong> HrNgayCong { get; set; }
        public virtual DbSet<HrNhanVien> HrNhanVien { get; set; }
        public virtual DbSet<HrPSBHXH> HrPSBHXH { get; set; }
        public virtual DbSet<HrPSLuong> HrPSLuong { get; set; }
        public virtual DbSet<HrQuanHeGiaDinh> HrQuanHeGiaDinh { get; set; }
        public virtual DbSet<HrQuaTrinhBHXH> HrQuaTrinhBHXH { get; set; }
        public virtual DbSet<HrQuaTrinhCongTac> HrQuaTrinhCongTac { get; set; }
        public virtual DbSet<HrQuaTrinhLuong> HrQuaTrinhLuong { get; set; }
        public virtual DbSet<HrTyLeBHXH> HrTyLeBHXH { get; set; }
        public virtual DbSet<HrThangBangLuong> HrThangBangLuong { get; set; }
        public virtual DbSet<ListBangCap> ListBangCap { get; set; }
        public virtual DbSet<ListBoPhan> ListBoPhan { get; set; }
        public virtual DbSet<ListCapKTKL> ListCapKTKL { get; set; }
        public virtual DbSet<ListCMDaoTao> ListCMDaoTao { get; set; }
        public virtual DbSet<ListChiBo> ListChiBo { get; set; }
        public virtual DbSet<ListChucDanh> ListChucDanh { get; set; }
        public virtual DbSet<ListChucVu> ListChucVu { get; set; }
        public virtual DbSet<ListChucVuDang> ListChucVuDang { get; set; }
        public virtual DbSet<ListDanToc> ListDanToc { get; set; }
        public virtual DbSet<ListDienCS> ListDienCS { get; set; }
        public virtual DbSet<ListHonNhan> ListHonNhan { get; set; }
        public virtual DbSet<ListHopDong> ListHopDong { get; set; }
        public virtual DbSet<ListKTKL> ListKTKL { get; set; }
        public virtual DbSet<ListLHDaoTao> ListLHDaoTao { get; set; }
        public virtual DbSet<ListLoaiTB> ListLoaiTB { get; set; }
        public virtual DbSet<ListNoiKCB> ListNoiKCB { get; set; }
        public virtual DbSet<ListNganHang> ListNganHang { get; set; }
        public virtual DbSet<ListNghiepVu> ListNghiepVu { get; set; }
        public virtual DbSet<ListNgoaiNgu> ListNgoaiNgu { get; set; }
        public virtual DbSet<ListPhongBan> ListPhongBan { get; set; }
        public virtual DbSet<ListQuanHeGD> ListQuanHeGD { get; set; }
        public virtual DbSet<ListQuanHuyen> ListQuanHuyen { get; set; }
        public virtual DbSet<ListQuocGia> ListQuocGia { get; set; }
        public virtual DbSet<ListTDDaoTao> ListTDDaoTao { get; set; }
        public virtual DbSet<ListTDLLCT> ListTDLLCT { get; set; }
        public virtual DbSet<ListTDNgoaiNgu> ListTDNgoaiNgu { get; set; }
        public virtual DbSet<ListTDQLNN> ListTDQLNN { get; set; }
        public virtual DbSet<ListTDVanHoa> ListTDVanHoa { get; set; }
        public virtual DbSet<ListTinh> ListTinh { get; set; }
        public virtual DbSet<ListTonGiao> ListTonGiao { get; set; }
        public virtual DbSet<ListThanhPhanGD> ListThanhPhanGD { get; set; }
        public virtual DbSet<ListXaPhuong> ListXaPhuong { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<SysLogs> SysLogs { get; set; }
        public virtual DbSet<SysRoles> SysRoles { get; set; }
        public virtual DbSet<SysUser> SysUser { get; set; }
        public virtual DbSet<SysUserRoles> SysUserRoles { get; set; }
        public virtual DbSet<SysUserSettings> SysUserSettings { get; set; }
    
        public virtual int DBA_RestoreDB(string p_strDBNameTo, string p_strDBNameFrom, string p_strFQNRestoreFileName)
        {
            var p_strDBNameToParameter = p_strDBNameTo != null ?
                new ObjectParameter("p_strDBNameTo", p_strDBNameTo) :
                new ObjectParameter("p_strDBNameTo", typeof(string));
    
            var p_strDBNameFromParameter = p_strDBNameFrom != null ?
                new ObjectParameter("p_strDBNameFrom", p_strDBNameFrom) :
                new ObjectParameter("p_strDBNameFrom", typeof(string));
    
            var p_strFQNRestoreFileNameParameter = p_strFQNRestoreFileName != null ?
                new ObjectParameter("p_strFQNRestoreFileName", p_strFQNRestoreFileName) :
                new ObjectParameter("p_strFQNRestoreFileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DBA_RestoreDB", p_strDBNameToParameter, p_strDBNameFromParameter, p_strFQNRestoreFileNameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<XemQuaTrinhNew_Result> XemQuaTrinhNew(string fullName, Nullable<System.DateTime> birthday)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<XemQuaTrinhNew_Result>("XemQuaTrinhNew", fullNameParameter, birthdayParameter);
        }
    
        public virtual ObjectResult<XemQuaTrinhNewAll_Result> XemQuaTrinhNewAll(string fullName, Nullable<System.DateTime> birthday, string soBHXH, string sOCMND)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var soBHXHParameter = soBHXH != null ?
                new ObjectParameter("SoBHXH", soBHXH) :
                new ObjectParameter("SoBHXH", typeof(string));
    
            var sOCMNDParameter = sOCMND != null ?
                new ObjectParameter("SOCMND", sOCMND) :
                new ObjectParameter("SOCMND", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<XemQuaTrinhNewAll_Result>("XemQuaTrinhNewAll", fullNameParameter, birthdayParameter, soBHXHParameter, sOCMNDParameter);
        }
    }
}
